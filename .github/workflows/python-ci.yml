name: Python CI

on:
  push:
    branches: [ "main" ]
    paths:
      - 'python/**'
      - '.github/workflows/python-ci.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'python/**'
      - '.github/workflows/python-ci.yml'

permissions:
  contents: read # Default, can be adjusted if workflows need to write to the repo

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    defaults:
      run:
        working-directory: ./python

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: ./python/.venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Install project (for editable mode tests)
      run: poetry install --no-interaction

    - name: Lint with Ruff
      run: |
        poetry run ruff check .
        poetry run ruff format --check .

    - name: Test with Pytest
      run: |
        poetry run pytest 