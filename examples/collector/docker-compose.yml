services:
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.100.0 # Using a specific contrib version
    container_name: otel-collector-aep
    command: ["--config=/etc/otelcol-contrib/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otelcol-contrib/otel-collector-config.yaml
    ports:
      - "4317:4317"  # OTLP gRPC receiver
      - "4318:4318"  # OTLP HTTP receiver
      - "1888:1888"  # pprof extension
      - "13133:13133" # health_check extension
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger
    networks:
      - otel-network

  jaeger:
    image: jaegertracing/all-in-one:1.56 # Using a specific version
    container_name: jaeger-aep
    ports:
      - "16686:16686" # Jaeger UI
      - "14268:14268" # Accepts jaeger.thrift directly from clients
      - "14250:14250" # Accepts model.proto from OTEL Collector (gRPC)
    environment:
      - COLLECTOR_OTLP_ENABLED=true # Not strictly needed if collector sends in jaeger format, but good for flexibility
    networks:
      - otel-network

  tempo:
    image: grafana/tempo:latest
    container_name: tempo-aep
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./tempo-config.yaml:/etc/tempo.yaml # We will create this basic config file
      - tempo_data:/tmp/tempo
    ports:
      - "3200:3200"  # Tempo HTTP (usually for Grafana datasource)
      # Tempo also listens on 4317 (OTLP gRPC), 4318 (OTLP HTTP) by default, no need to expose if only collector talks to it on internal network
    networks:
      - otel-network
    depends_on:
      - otel-collector

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana-aep
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana_provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana_provisioning/dashboards:/etc/grafana/provisioning/dashboards
    ports:
      - "3001:3000"  # Grafana UI now on host port 3001
    networks:
      - otel-network
    depends_on:
      - tempo

networks:
  otel-network:
    driver: bridge

volumes:
  tempo_data: {}
  grafana_data: {} 